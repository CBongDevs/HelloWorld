name: Deploy

on:
  push:
    # Needs expanding later
    branches: [ master, develop, dpat-8-deploy-to-heroku ]
  pull_request:
    branches: [ dpat-8-deploy-to-heroku ]
    types: [assigned, unassigned, labeled, unlabeled, opened, edited, closed, reopened, synchronize, ready_for_review, locked, unlocked, review_requested, review_request_removed]

jobs:
  version-bump:
    name: Version Bump
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version-bump.outputs.version }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Bump Version
        uses: nobrayner/version-bumper@master # Because this is still being tested!
        id: version-bump
        with:
          github-token: ${{ secrets.github_token }}
          bump: 'preminor'
          prerelease-text: 'dev'

      - name: Commit new version
        if: ${{ steps.version-bump.outputs.new-version == 'true' || steps.version-bump.outputs.new-version == true }}
        run: |
          echo "Version Bump new-version: ${{ steps.version-bump.outputs.new-version }}"
          echo ${{ steps.version-bump.outputs.version }} > version.info
          cd web && npm version --git-tag-version=false --allow-same-version ${{ steps.version-bump.outputs.version }}
          cd ../api && echo ${{ steps.version-bump.outputs.version }} > VERSION
          cd ..
          git config user.email version-bumper@github.com
          git config user.name ${{ github.actor }}
          git add .
          git commit -m "Bump version to ${{ steps.version-bump.outputs.version }}"
          git push

  build:
    name: Build
    needs:
      - version-bump
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Use Node.js 10.x
      uses: actions/setup-node@v1
      with:
        node-version: 10.x

    - name: Install dependencies
      run: npm install
      working-directory: ./web

    - name: Build Web
      run: npm run build --if-present
      working-directory: ./web

    - name: Merge and Zip
      run: |
       tar cfv artifact-${{ needs.version-bump.outputs.version }}.tgz \
                --exclude=artifact-${{ needs.version-bump.outputs.version }}.tgz \
                --exclude=.git \
                --exclude=web \
                .
        tar rfv artifact-${{ needs.version-bump.outputs.version }}.tgz \
                --exclude=web/node_modules \
                web

    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: artifact-${{ needs.version-bump.outputs.version }}
        path: artifact-${{ needs.version-bump.outputs.version }}.tgz

  deploy:
    needs:
      - build
      - version-bump
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: artifact-${{ needs.version-bump.outputs.version }}

    - name: Deploy to Heroku (Staging)
      uses: mrwerdo/DeployToHeroku@v0.0.7
      with:
        artifact: artifact-${{ needs.version-bump.outputs.version }}.tgz
        token: ${{ secrets.HEROKU_API_TOKEN }}
        environments: |
          /dpat/ -> cbongdevs-staging-helloworld
          /develop/ -> cbongdevs-staging-helloworld
          /master/ -> cbongdevs-prod-helloworld

  notify:
    name: Discord Notification
    runs-on: ubuntu-latest
    needs:
      - version-bump
      - build
      - deploy
    if: ${{ always() }}
    
    steps:
      - name: Notify
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.github_token }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
          description: ${{ needs.version-bump.outputs.version }}
