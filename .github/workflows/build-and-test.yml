name: Build and Test

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  notify-build:
    name: Notify In Discord
    runs-on: ubuntu-latest
    steps:
    - name: Discord notification (commit)
      if: always()
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      uses: Ilshidur/action-discord@0.1.0
  version-bump:
    name: Version Bump
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version-bump.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - name: Bump Version
        uses: nobrayner/version-bumper@v1
        id: version-bump
        with:
          bump: 'preminor'
          prerelease-text: 'dev'
          build-number: ${{ github.run_number }}
      - name: Commit new version
        if: ${{ steps.version-bump.outputs.new-version }}
        run: |
          echo ${{ steps.version-bump.outputs.version }} > version.info
          cd web && npm version --git-tag-version=false ${{ steps.version-bump.outputs.version }}
          cd ../api && echo ${{ steps.version-bump.outputs.version }} > VERSION
          git config user.email version-bumper@github.com
          git config user.name ${{ github.actor }}
          git add .
          git commit -m "Bump version to ${{ steps.version-bump.outputs.version }}"
          git push
  build-api:
    needs:
      - version-bump
    name: Build and Test Api
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
    - name: Push results to discord (sucess)
      if: success()
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        DISCORD_USERNAME: Build Succeeded
        DISCORD_AVATAR: https://cdn.discordapp.com/attachments/717307128028594186/717522733965115543/GithubActionsGreenTick.png
      uses: Ilshidur/action-discord@0.1.0
      with:
        args: 'The build [${{ github.job }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) of project ${{ github.repository }} has succeeded.'
    - name: Push results to discord (fail)
      if: failure()
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        DISCORD_USERNAME: Build Failed
        DISCORD_AVATAR: https://cdn.discordapp.com/attachments/717307128028594186/717523006964105246/GithubActionsRedTick.png
      uses: Ilshidur/action-discord@0.1.0
      with:
        args: 'The build [${{ github.job }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) of project ${{ github.repository }} has failed.'
  build-web:
    needs:
      - version-bump
    name: Build Web
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 10.x
      uses: actions/setup-node@v1
      with:
        node-version: 10.x
    - run: npm ci
      working-directory: ./web
    - run: npm run build --if-present
      working-directory: ./web
    - name: Archive production artifacts
      uses: actions/upload-artifact@v1
      with:
        name: dist-${{ needs.version-bump.outputs.version }}
        path: ./web/build
    - name: Push results to discord (sucess)
      if: success()
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        DISCORD_USERNAME: Build Succeeded
        DISCORD_AVATAR: https://cdn.discordapp.com/attachments/717307128028594186/717522733965115543/GithubActionsGreenTick.png
      uses: Ilshidur/action-discord@0.1.0
      with:
        args: 'The build [${{ github.job }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) of project ${{ github.repository }} has succeeded.'
    - name: Push results to discord (fail)
      if: failure()
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        DISCORD_USERNAME: Build Failed
        DISCORD_AVATAR: https://cdn.discordapp.com/attachments/717307128028594186/717523006964105246/GithubActionsRedTick.png
      uses: Ilshidur/action-discord@0.1.0
      with:
        args: 'The build [${{ github.job }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) of project ${{ github.repository }} has failed.'
  merge-results:
    needs:
      - version-bump
      - build-api
      - build-web
    name: Merge Results
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Download dist
      uses: actions/download-artifact@v1
      with:
        name: dist-${{ needs.version-bump.outputs.version }}
        path: ./dist
    - name: Merge and Zip
      run: |
        mv ./dist ./web/build
        touch artifact-${{ needs.version-bump.outputs.version }}.tgz
        tar czfv artifact-${{ needs.version-bump.outputs.version }}.tgz --exclude=artifact-${{ needs.version-bump.outputs.version }}.tgz --exclude=.git .
    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: artifact-${{ needs.version-bump.outputs.version }}
        path: artifact-${{ needs.version-bump.outputs.version }}.tgz
  deploy-to-heroku:
    needs:
      - merge-results
      - version-bump
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Download artifact.tgz
      uses: actions/download-artifact@v2
      with:
        name: artifact-${{ needs.version-bump.outputs.version }}
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Deploy to Staging
      run: |
        ls -R
        python deploy.py deploy --app cbongdevs-staging-helloworld artifact-${{ needs.version-bump.outputs.version }}.tgz
        python deploy.py build-output --app cbongdevs-staging-helloworld -n 0
      env:
        HEROKU_API_TOKEN: ${{ secrets.HEROKU_API_TOKEN }}
    - name: Push results to discord (sucess)
      if: success()
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        DISCORD_USERNAME: Deploy Succeeded
        DISCORD_AVATAR: https://cdn.discordapp.com/attachments/717307128028594186/717522733965115543/GithubActionsGreenTick.png
      uses: Ilshidur/action-discord@0.1.0
      with:
        args: 'Deployment for [${{ needs.version-bump.outputs.version }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) of project ${{ github.repository }} has succeeded.'
    - name: Push results to discord (fail)
      if: failure()
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        DISCORD_USERNAME: Deploy Failed
        DISCORD_AVATAR: https://cdn.discordapp.com/attachments/717307128028594186/717522733965115543/GithubActionsRedTick.png
      uses: Ilshidur/action-discord@0.1.0
      with:
        args: 'Deployment for [${{ needs.version-bump.outputs.version }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) of project ${{ github.repository }} has failed.'
