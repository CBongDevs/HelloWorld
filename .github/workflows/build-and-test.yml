name: Build and Test

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build-api:
    name: Build and Test Api
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 10.x
      uses: actions/setup-node@v1
      with:
        node-version: 10.x
    - run: npm ci
      working-directory: ./web
    - run: npm run build --if-present
      working-directory: ./web
    - name: Archive production artifacts
      uses: actions/upload-artifact@v1
      with:
        name: dist
        path: ./web/build
  merge-results:
    needs:
      - build-api
      - build-web
    name: Merge Results
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Download dist
      uses: actions/download-artifact@v1
      with:
        name: dist
    - name: Merge and Zip
      run: |
        mv ./dist ./web/build
        touch artifact.tgz
        tar czfv artifact.tgz --exclude=artifact.tgz --exclude=.git .
    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: artifact.tgz
        path: artifact.tgz
  draft-release:
    needs:
      - merge-results
    name: Draft Release
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v1
        with:
          name: artifact.tgz
          path: ./
      - name: Draft Release
        id: draft_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            An example release
          draft: true
          prerelease: false
      - name: Upload Release Assets
        id: upload_assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.draft_release.outputs.upload_url }}
          asset_path: artifact.tgz
          asset_name: ${{ github.ref }}
          asset_content_type: application/gzip
